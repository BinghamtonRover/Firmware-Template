/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_ARM_PB_H_INCLUDED
#define PB_ARM_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Position {
    int32_t x;
    int32_t y;
    int32_t z;
} Position;

typedef struct _ArmCommand {
    bool has_move_to;
    Position move_to;
    bool calibrate;
    float swivel;
    float extend;
    float lift;
    float precise_swivel;
    float precise_lift;
    float precise_extend;
} ArmCommand;

typedef struct _MotorStatus {
    bool is_moving;
    float angle;
    float temperature;
} MotorStatus;

typedef struct _ArmData {
    bool has_currentPosition;
    Position currentPosition;
    bool has_targetPosition;
    Position targetPosition;
    bool has_base;
    MotorStatus base;
    bool has_shoulder;
    MotorStatus shoulder;
    bool has_elbow;
    MotorStatus elbow;
} ArmData;

typedef struct _GripperData {
    float rotation;
    float swivel;
    float pinch;
    float motor_temperature;
} GripperData;

typedef struct _GripperCommand {
    bool calibrate;
    float pinch;
    float rotate;
    float precise_pinch;
    float precise_rotate;
} GripperCommand;

typedef struct _HreiData {
    bool has_arm_data;
    ArmData arm_data;
    bool has_gripper_data;
    GripperData gripper_data;
} HreiData;

typedef struct _HreiCommand {
    bool has_arm_command;
    ArmCommand arm_command;
    bool has_gripper_command;
    GripperCommand gripper_command;
} HreiCommand;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Position_init_default                    {0, 0, 0}
#define ArmCommand_init_default                  {false, Position_init_default, 0, 0, 0, 0, 0, 0, 0}
#define MotorStatus_init_default                 {0, 0, 0}
#define ArmData_init_default                     {false, Position_init_default, false, Position_init_default, false, MotorStatus_init_default, false, MotorStatus_init_default, false, MotorStatus_init_default}
#define GripperData_init_default                 {0, 0, 0, 0}
#define GripperCommand_init_default              {0, 0, 0, 0, 0}
#define HreiData_init_default                    {false, ArmData_init_default, false, GripperData_init_default}
#define HreiCommand_init_default                 {false, ArmCommand_init_default, false, GripperCommand_init_default}
#define Position_init_zero                       {0, 0, 0}
#define ArmCommand_init_zero                     {false, Position_init_zero, 0, 0, 0, 0, 0, 0, 0}
#define MotorStatus_init_zero                    {0, 0, 0}
#define ArmData_init_zero                        {false, Position_init_zero, false, Position_init_zero, false, MotorStatus_init_zero, false, MotorStatus_init_zero, false, MotorStatus_init_zero}
#define GripperData_init_zero                    {0, 0, 0, 0}
#define GripperCommand_init_zero                 {0, 0, 0, 0, 0}
#define HreiData_init_zero                       {false, ArmData_init_zero, false, GripperData_init_zero}
#define HreiCommand_init_zero                    {false, ArmCommand_init_zero, false, GripperCommand_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define Position_x_tag                           1
#define Position_y_tag                           2
#define Position_z_tag                           3
#define ArmCommand_move_to_tag                   1
#define ArmCommand_calibrate_tag                 2
#define ArmCommand_swivel_tag                    3
#define ArmCommand_extend_tag                    4
#define ArmCommand_lift_tag                      5
#define ArmCommand_precise_swivel_tag            6
#define ArmCommand_precise_lift_tag              7
#define ArmCommand_precise_extend_tag            8
#define MotorStatus_is_moving_tag                1
#define MotorStatus_angle_tag                    2
#define MotorStatus_temperature_tag              3
#define ArmData_currentPosition_tag              1
#define ArmData_targetPosition_tag               2
#define ArmData_base_tag                         3
#define ArmData_shoulder_tag                     4
#define ArmData_elbow_tag                        5
#define GripperData_rotation_tag                 1
#define GripperData_swivel_tag                   2
#define GripperData_pinch_tag                    3
#define GripperData_motor_temperature_tag        4
#define GripperCommand_calibrate_tag             1
#define GripperCommand_pinch_tag                 2
#define GripperCommand_rotate_tag                3
#define GripperCommand_precise_pinch_tag         4
#define GripperCommand_precise_rotate_tag        5
#define HreiData_arm_data_tag                    1
#define HreiData_gripper_data_tag                2
#define HreiCommand_arm_command_tag              1
#define HreiCommand_gripper_command_tag          2

/* Struct field encoding specification for nanopb */
#define Position_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    x,                 1) \
X(a, STATIC,   SINGULAR, INT32,    y,                 2) \
X(a, STATIC,   SINGULAR, INT32,    z,                 3)
#define Position_CALLBACK NULL
#define Position_DEFAULT NULL

#define ArmCommand_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  move_to,           1) \
X(a, STATIC,   SINGULAR, BOOL,     calibrate,         2) \
X(a, STATIC,   SINGULAR, FLOAT,    swivel,            3) \
X(a, STATIC,   SINGULAR, FLOAT,    extend,            4) \
X(a, STATIC,   SINGULAR, FLOAT,    lift,              5) \
X(a, STATIC,   SINGULAR, FLOAT,    precise_swivel,    6) \
X(a, STATIC,   SINGULAR, FLOAT,    precise_lift,      7) \
X(a, STATIC,   SINGULAR, FLOAT,    precise_extend,    8)
#define ArmCommand_CALLBACK NULL
#define ArmCommand_DEFAULT NULL
#define ArmCommand_move_to_MSGTYPE Position

#define MotorStatus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     is_moving,         1) \
X(a, STATIC,   SINGULAR, FLOAT,    angle,             2) \
X(a, STATIC,   SINGULAR, FLOAT,    temperature,       3)
#define MotorStatus_CALLBACK NULL
#define MotorStatus_DEFAULT NULL

#define ArmData_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  currentPosition,   1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  targetPosition,    2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  base,              3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  shoulder,          4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  elbow,             5)
#define ArmData_CALLBACK NULL
#define ArmData_DEFAULT NULL
#define ArmData_currentPosition_MSGTYPE Position
#define ArmData_targetPosition_MSGTYPE Position
#define ArmData_base_MSGTYPE MotorStatus
#define ArmData_shoulder_MSGTYPE MotorStatus
#define ArmData_elbow_MSGTYPE MotorStatus

#define GripperData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    rotation,          1) \
X(a, STATIC,   SINGULAR, FLOAT,    swivel,            2) \
X(a, STATIC,   SINGULAR, FLOAT,    pinch,             3) \
X(a, STATIC,   SINGULAR, FLOAT,    motor_temperature,   4)
#define GripperData_CALLBACK NULL
#define GripperData_DEFAULT NULL

#define GripperCommand_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     calibrate,         1) \
X(a, STATIC,   SINGULAR, FLOAT,    pinch,             2) \
X(a, STATIC,   SINGULAR, FLOAT,    rotate,            3) \
X(a, STATIC,   SINGULAR, FLOAT,    precise_pinch,     4) \
X(a, STATIC,   SINGULAR, FLOAT,    precise_rotate,    5)
#define GripperCommand_CALLBACK NULL
#define GripperCommand_DEFAULT NULL

#define HreiData_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  arm_data,          1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  gripper_data,      2)
#define HreiData_CALLBACK NULL
#define HreiData_DEFAULT NULL
#define HreiData_arm_data_MSGTYPE ArmData
#define HreiData_gripper_data_MSGTYPE GripperData

#define HreiCommand_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  arm_command,       1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  gripper_command,   2)
#define HreiCommand_CALLBACK NULL
#define HreiCommand_DEFAULT NULL
#define HreiCommand_arm_command_MSGTYPE ArmCommand
#define HreiCommand_gripper_command_MSGTYPE GripperCommand

extern const pb_msgdesc_t Position_msg;
extern const pb_msgdesc_t ArmCommand_msg;
extern const pb_msgdesc_t MotorStatus_msg;
extern const pb_msgdesc_t ArmData_msg;
extern const pb_msgdesc_t GripperData_msg;
extern const pb_msgdesc_t GripperCommand_msg;
extern const pb_msgdesc_t HreiData_msg;
extern const pb_msgdesc_t HreiCommand_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Position_fields &Position_msg
#define ArmCommand_fields &ArmCommand_msg
#define MotorStatus_fields &MotorStatus_msg
#define ArmData_fields &ArmData_msg
#define GripperData_fields &GripperData_msg
#define GripperCommand_fields &GripperCommand_msg
#define HreiData_fields &HreiData_msg
#define HreiCommand_fields &HreiCommand_msg

/* Maximum encoded size of messages (where known) */
#define ArmCommand_size                          67
#define ArmData_size                             112
#define GripperCommand_size                      22
#define GripperData_size                         20
#define HreiCommand_size                         93
#define HreiData_size                            136
#define MotorStatus_size                         12
#define Position_size                            33

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
