/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_ELECTRICAL_PB_H_INCLUDED
#define PB_ELECTRICAL_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* OFF is only available via a hardware button */
typedef enum _PowerMode {
    PowerMode_POWER_MODE_UNDEFINED = 0,
    PowerMode_IDLE = 1, /* Yellow LEDs */
    PowerMode_ACTIVE = 2 /* Green LEDs */
} PowerMode;

typedef enum _LedColor {
    LedColor_LED_COLOR_UNDEFINED = 0,
    LedColor_RED = 1,
    LedColor_YELLOW = 2,
    LedColor_GREEN = 3
} LedColor;

/* Struct definitions */
typedef struct _ElectricalCommand {
    LedColor autonomy_led_color;
    LedColor power_led_color;
} ElectricalCommand;

typedef struct _PowerSourceStatus {
    float current;
    float voltage;
    float temperature;
} PowerSourceStatus;

typedef struct _ElectricalData { /* PowerSourceStatus v5 = 1;
 PowerSourceStatus v12 = 2;
 PowerSourceStatus battery = 3; */
    float v5_current;
    float v5_voltage;
    float v5_temperature;
    float v12_current;
    float v12_voltage;
    float v12_temperature;
    float battery_current;
    float battery_voltage;
    float battery_temperature;
} ElectricalData;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _PowerMode_MIN PowerMode_POWER_MODE_UNDEFINED
#define _PowerMode_MAX PowerMode_ACTIVE
#define _PowerMode_ARRAYSIZE ((PowerMode)(PowerMode_ACTIVE+1))

#define _LedColor_MIN LedColor_LED_COLOR_UNDEFINED
#define _LedColor_MAX LedColor_GREEN
#define _LedColor_ARRAYSIZE ((LedColor)(LedColor_GREEN+1))

#define ElectricalCommand_autonomy_led_color_ENUMTYPE LedColor
#define ElectricalCommand_power_led_color_ENUMTYPE LedColor




/* Initializer values for message structs */
#define ElectricalCommand_init_default           {_LedColor_MIN, _LedColor_MIN}
#define PowerSourceStatus_init_default           {0, 0, 0}
#define ElectricalData_init_default              {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define ElectricalCommand_init_zero              {_LedColor_MIN, _LedColor_MIN}
#define PowerSourceStatus_init_zero              {0, 0, 0}
#define ElectricalData_init_zero                 {0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define ElectricalCommand_autonomy_led_color_tag 1
#define ElectricalCommand_power_led_color_tag    2
#define PowerSourceStatus_current_tag            1
#define PowerSourceStatus_voltage_tag            2
#define PowerSourceStatus_temperature_tag        3
#define ElectricalData_v5_current_tag            1
#define ElectricalData_v5_voltage_tag            2
#define ElectricalData_v5_temperature_tag        3
#define ElectricalData_v12_current_tag           4
#define ElectricalData_v12_voltage_tag           5
#define ElectricalData_v12_temperature_tag       6
#define ElectricalData_battery_current_tag       7
#define ElectricalData_battery_voltage_tag       8
#define ElectricalData_battery_temperature_tag   9

/* Struct field encoding specification for nanopb */
#define ElectricalCommand_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    autonomy_led_color,   1) \
X(a, STATIC,   SINGULAR, UENUM,    power_led_color,   2)
#define ElectricalCommand_CALLBACK NULL
#define ElectricalCommand_DEFAULT NULL

#define PowerSourceStatus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    current,           1) \
X(a, STATIC,   SINGULAR, FLOAT,    voltage,           2) \
X(a, STATIC,   SINGULAR, FLOAT,    temperature,       3)
#define PowerSourceStatus_CALLBACK NULL
#define PowerSourceStatus_DEFAULT NULL

#define ElectricalData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    v5_current,        1) \
X(a, STATIC,   SINGULAR, FLOAT,    v5_voltage,        2) \
X(a, STATIC,   SINGULAR, FLOAT,    v5_temperature,    3) \
X(a, STATIC,   SINGULAR, FLOAT,    v12_current,       4) \
X(a, STATIC,   SINGULAR, FLOAT,    v12_voltage,       5) \
X(a, STATIC,   SINGULAR, FLOAT,    v12_temperature,   6) \
X(a, STATIC,   SINGULAR, FLOAT,    battery_current,   7) \
X(a, STATIC,   SINGULAR, FLOAT,    battery_voltage,   8) \
X(a, STATIC,   SINGULAR, FLOAT,    battery_temperature,   9)
#define ElectricalData_CALLBACK NULL
#define ElectricalData_DEFAULT NULL

extern const pb_msgdesc_t ElectricalCommand_msg;
extern const pb_msgdesc_t PowerSourceStatus_msg;
extern const pb_msgdesc_t ElectricalData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ElectricalCommand_fields &ElectricalCommand_msg
#define PowerSourceStatus_fields &PowerSourceStatus_msg
#define ElectricalData_fields &ElectricalData_msg

/* Maximum encoded size of messages (where known) */
#define ElectricalCommand_size                   4
#define ElectricalData_size                      45
#define PowerSourceStatus_size                   15

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
